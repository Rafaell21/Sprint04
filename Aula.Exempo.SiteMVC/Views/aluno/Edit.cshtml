@model Aula.Exemplo.VO.aluno

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Ajax.BeginForm("EditAjax", null, new AjaxOptions() { OnSuccess = "getResultadoEdit", HttpMethod = "post" },
                                                                           new { @id = "formEdit", @name = "formEdit" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>aluno</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idAluno)

        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idEstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idEstadoCivil, (IEnumerable<SelectListItem>)ViewBag.idEstadoCivilList, "selecione...", new { @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(model => model.idEstadoCivil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
    <script src="~/Scripts/jquery.form.js"></script>
    <script type='text/javascript'>

    jQuery(function () {
        jQuery.validator.unobtrusive.parse('form');
    });

    function getResultadoEdit(data) {
        if (data.success) {
            alert('registro feito com sucesso!');
        }
    }
    </script>
}
